{"version":3,"names":[],"mappings":"","sources":["ViewTeleporter"],"sourcesContent":["\nvar state = {\n  events: [],\n  params: {},\n  url: false,\n  model: null\n}\nexport class Router {\n  constructor() {\n    this.url = state.url;\n    this.params = state.params;\n    this.model = state.model;\n    this.modelPath = state.modelPath;\n    this.events = state.events;\n  }\n  onChange(cb) {\n    this.events.push({ invoke: cb });\n  }\n  back() {\n    this.details(null);\n  }\n  invoke(model) {\n    this.events.forEach((cb) => { cb.invoke(model); });\n  }\n  details(model) {\n    if (model) {\n      state.model = model;\n      state.url = true;\n      this.model = model;\n      this.url = state.url;\n      this.invoke(this.model);\n    } else {\n      state.url = false;\n      this.url = state.url;\n      this.invoke(null);\n    }\n  }\n\n}\n"],"file":"ViewTeleporter.js","sourceRoot":"/source/"}