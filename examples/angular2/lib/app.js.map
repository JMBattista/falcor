{"version":3,"names":[],"mappings":"","sources":["app"],"sourcesContent":["import {Component, View, NgElement} from 'angular2/angular2';\r\nimport {If, For} from 'angular2/angular2';\r\nimport {bootstrap} from 'angular2/angular2';\r\nimport {bind} from 'angular2/di';\r\n\r\n@Component({\r\n  selector: 'movie',\r\n  properties: {\r\n    model: 'model'\r\n  }\r\n})\r\n@View({\r\n  template: `\r\n  <div style=\"display:inline-block\">\r\n    <a [href]=\"'#/'+ (model.getValue('name') | async)\">\r\n      <div>\r\n        <h3>{{ model.getValue('name') | async }}</h3>\r\n        Rating {{ rate((model.getValue('rating') | async)) }}\r\n      </div>\r\n      <img [src]=\"model.getValue('img') | async\">\r\n    </a>\r\n  </div>\r\n  `,\r\n  directives: [\r\n  ]\r\n})\r\nclass Movie {\r\n  constructor() {\r\n  }\r\n\r\n  rate(num) {\r\n    var stars = '';\r\n    if (num !== undefined) {\r\n      for(var counter = 0; counter < 5; counter++) {\r\n        stars += (counter < num) ? \"★\" : \"☆\";\r\n      }\r\n    }\r\n    return stars;\r\n  }\r\n\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'genres-list',\r\n  properties: {\r\n    model: 'model'\r\n  }\r\n})\r\n@View({\r\n  template: `\r\n  <style>\r\n    .scroll-row {\r\n      width: auto;\r\n      overflow-x: scroll;\r\n      overflow-y: hidden;\r\n      white-space: nowrap;\r\n      position: relative;\r\n    }\r\n  </style>\r\n\r\n  <h2>\r\n    {{ model.getValue(['name']) | async }}\r\n  </h2>\r\n  <div class=\"scroll-row\">\r\n    <movie [model]=\"model.bind('titles[0]', 'name') | async\"></movie>\r\n    <movie [model]=\"model.bind('titles[1]', 'name') | async\"></movie>\r\n    <movie [model]=\"model.bind('titles[2]', 'name') | async\"></movie>\r\n    <movie [model]=\"model.bind('titles[3]', 'name') | async\"></movie>\r\n    <movie [model]=\"model.bind('titles[4]', 'name') | async\"></movie>\r\n    <movie [model]=\"model.bind('titles[5]', 'name') | async\"></movie>\r\n    <movie [model]=\"model.bind('titles[6]', 'name') | async\"></movie>\r\n    <movie [model]=\"model.bind('titles[7]', 'name') | async\"></movie>\r\n  <scroll-row>\r\n  `,\r\n  directives: [ Movie ]\r\n})\r\nclass GenreList {}\r\n\r\n@Component({\r\n  selector: 'app'\r\n})\r\n@View({\r\n  template: `\r\n  <center>\r\n    <h1>Angular 2 + FalcorJS</h1>\r\n  </center>\r\n\r\n  <genres-list [model]=\"model.bind('genres[0]', 'name') | async\"></genres-list>\r\n  <genres-list [model]=\"model.bind('genres[1]', 'name') | async\"></genres-list>\r\n  <genres-list [model]=\"model.bind('genres[2]', 'name') | async\"></genres-list>\r\n  <genres-list [model]=\"model.bind('genres[3]', 'name') | async\"></genres-list>\r\n\r\n  `,\r\n  directives: [ If, For, GenreList ]\r\n})\r\nclass App {\r\n  constructor() {\r\n    var Model = falcor.Model;\r\n    var $ref  = falcor.Model.ref;\r\n\r\n    var model = new Model({\r\n      cache: getCache()\r\n    });\r\n\r\n    this.model = model;\r\n  }\r\n}\r\n\r\n\r\nbootstrap(App);\r\n\r\n\r\n\r\nfunction getCache() {\r\n  var $ref = falcor.Model.ref;\r\n  return {\r\n    genres: [\r\n      {\r\n        titles: [\r\n          $ref('titlesById[99]'),\r\n          $ref('titlesById[80]'),\r\n          $ref('titlesById[77]'),\r\n          $ref('titlesById[42]'),\r\n          $ref('titlesById[7]'),\r\n          $ref('titlesById[9]'),\r\n          $ref('titlesById[60]'),\r\n          $ref('titlesById[12]'),\r\n        ],\r\n        name: 'New Releases'\r\n      },\r\n      {\r\n        titles: [\r\n          $ref('titlesById[99]'),\r\n          $ref('titlesById[80]'),\r\n          $ref('titlesById[77]'),\r\n          $ref('titlesById[42]'),\r\n          $ref('titlesById[7]'),\r\n          $ref('titlesById[9]'),\r\n          $ref('titlesById[60]'),\r\n          $ref('titlesById[12]'),\r\n        ],\r\n        name: 'Thrillers'\r\n      },\r\n      {\r\n        titles: [\r\n          $ref('titlesById[99]'),\r\n          $ref('titlesById[80]'),\r\n          $ref('titlesById[77]'),\r\n          $ref('titlesById[42]'),\r\n          $ref('titlesById[7]'),\r\n          $ref('titlesById[9]'),\r\n          $ref('titlesById[60]'),\r\n          $ref('titlesById[12]'),\r\n        ],\r\n        name: 'Dramas'\r\n      },\r\n      {\r\n        titles: [\r\n          $ref('titlesById[99]'),\r\n          $ref('titlesById[80]'),\r\n          $ref('titlesById[77]'),\r\n          $ref('titlesById[42]'),\r\n          $ref('titlesById[7]'),\r\n          $ref('titlesById[9]'),\r\n          $ref('titlesById[60]'),\r\n          $ref('titlesById[12]'),\r\n        ],\r\n        name: 'Horror Movies'\r\n      }\r\n    ],\r\n    titlesById: {\r\n      '12': {\r\n        name: 'The Wolf of Wall Street',\r\n        rating: 5,\r\n        img: 'http://cdn2.nflximg.net/webp/8752/11138752.webp'\r\n      },\r\n      '60': {\r\n        name: 'Bates Motel',\r\n        rating: 5,\r\n        img: 'http://cdn0.nflximg.net/webp/8540/12128540.webp'\r\n      },\r\n      '7': {\r\n        name: 'Orange Is the new Black',\r\n        rating: 4,\r\n        img: 'http://cdn3.nflximg.net/webp/8153/11798153.webp'\r\n      },\r\n      '9': {\r\n        name: 'Breaking Bad',\r\n        rating: 5,\r\n        img: 'http://cdn0.nflximg.net/webp/7300/4177300.webp'\r\n      },\r\n      '42': {\r\n        name: 'Cosmos',\r\n        rating: 5,\r\n        img: 'http://cdn2.nflximg.net/webp/2642/9972642.webp'\r\n      },\r\n      '99': {\r\n        name: 'House of Cards',\r\n        rating: 5,\r\n        img: 'http://cdn5.nflximg.net/webp/8265/13038265.webp'\r\n      },\r\n      '80': {\r\n        name: 'Halt and Catch Fire',\r\n        rating: 5,\r\n        img: 'http://cdn4.nflximg.net/webp/8454/12968454.webp'\r\n      },\r\n      '77': {\r\n        name: 'Daredevil',\r\n        rating: 5,\r\n        img: 'http://cdn6.nflximg.net/webp/5516/20935516.webp'\r\n      }\r\n    }\r\n  };\r\n}\r\n"],"file":"app.js","sourceRoot":"/source/"}